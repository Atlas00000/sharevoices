apiVersion: apps/v1
kind: Deployment
metadata:
  name: sharedvoices-client
  namespace: staging
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sharedvoices-client
  template:
    metadata:
      labels:
        app: sharedvoices-client
    spec:
      containers:
      - name: client
        image: ghcr.io/${GITHUB_REPOSITORY}/client:${GITHUB_SHA}
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: "staging"
        - name: API_URL
          value: "http://content-service:4001"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sharedvoices-content
  namespace: staging
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sharedvoices-content
  template:
    metadata:
      labels:
        app: sharedvoices-content
    spec:
      containers:
      - name: content
        image: ghcr.io/${GITHUB_REPOSITORY}/content:${GITHUB_SHA}
        ports:
        - containerPort: 4001
        env:
        - name: NODE_ENV
          value: "staging"
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: sharedvoices-secrets
              key: mongodb-uri
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sharedvoices-user
  namespace: staging
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sharedvoices-user
  template:
    metadata:
      labels:
        app: sharedvoices-user
    spec:
      containers:
      - name: user
        image: ghcr.io/${GITHUB_REPOSITORY}/user:${GITHUB_SHA}
        ports:
        - containerPort: 4002
        env:
        - name: NODE_ENV
          value: "staging"
        - name: POSTGRES_URI
          valueFrom:
            secretKeyRef:
              name: sharedvoices-secrets
              key: postgres-uri 