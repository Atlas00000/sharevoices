version: '3.8'

services:
  # Frontend service
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    depends_on:
      - content-service
      - user-service

  # Backend services
  content-service:
    build:
      context: ./server/services/content
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    volumes:
      - ./server/services/content:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongodb:27017/sharedvoices
    depends_on:
      - mongodb

  user-service:
    build:
      context: ./server/services/user
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    volumes:
      - ./server/services/user:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - POSTGRES_URI=postgresql://postgres:postgres@postgres:5432/sharedvoices
    depends_on:
      - postgres

  # Databases
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=sharedvoices
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Redis for caching
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  mongodb_data:
  postgres_data:
  redis_data: 